<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>cz.cuni.mff.xrg.odcs</groupId>
        <artifactId>module-core</artifactId>
        <version>1.1.0</version>
    </parent>


    <artifactId>RDFToRDFMerger2Transformer</artifactId>
    <!-- TODO 2: specify module version, can be left unchanged -->
    <version>1.1.0</version>
    <packaging>bundle</packaging>
    <description>RDFToRDFMerger2Transformer merges RDF data in no time.</description>

    <properties>
        <dpu.package>cz.cuni.mff.xrg.odcs.dpu.rdftordfmerger2transformer</dpu.package>
        <dpu.mainClass>RDFToRDFMerger2Transformer</dpu.mainClass>
        <!-- TODO 6: Put path to the ODCL DPUs directory here -->
        <!-- this is required in order to use 'copy-to-odcl' and 'publish-to-odcl' profiles -->
        <dpu.odcl.dir></dpu.odcl.dir>
    </properties>

    <dependencies>
        <!-- TODO 7: add dependencies here -->
 <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dataunit</artifactId>
            <version>${odcs.version}</version>
            <type>jar</type>
            <scope>provided</scope>
        </dependency>

        <!-- Sample dependency defining a maven artifact - Saxon JAR - available on Maven repositories. If you have configured on your machine access to any maven repository, the following lines should work for you and should automatically make SAXON HE 9.2.1.5 available. The dependency (jar file) will be automaticaly
    added to the resulting OSGi bundle
        <dependency>
            <groupId>net.sourceforge.saxon</groupId>
            <artifactId>saxonhe</artifactId>
            <version>9.2.1.5</version>
            <type>jar</type>
        </dependency>
        -->

        <!-- Alternatively, if you would like to refer to local dependency on the file system,  use following code to import local dependency
           from sample project (folder) file/lib/MyLib.java. The dependency (jar file) will be automaticaly
           added to the resulting OSGi bundle. Prefer the reference to publicly available Maven repository (previous dependency example) over local repository (the following dependency example) - if you move the development of DPU to a different machine, local repository will not work there.
       <dependency>
           <groupId>com.surname.intlib</groupId>
           <artifactId>MyLib</artifactId>
           <version>1.0.0</version>
           <scope>system</scope>
           <systemPath>${project.basedir}/lib/MyLib.java</systemPath>
       </dependency>
        -->

    </dependencies>

</project>
